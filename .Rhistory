knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(sf)
homicide_data <- read_csv("https://raw.githubusercontent.com/washingtonpost/data-homicides/master/homicide-data.csv")
baltimore_daily <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2015|2016|2017", reported_date))
# There are 1,095 days between 01/01/2015 and 12/31/2017. There were 1,002 reported homicides in Baltimore, MD during that same time period, proving that there was almost a killing each day for the past three years (imagining that we are writing this in 2018) in Baltimore, MD
bmore_2014_arrests <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2014", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(pct_unsolved = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)))
# City police made an arrest in 40.76 percent of homicides in 2014 in Baltimore
bmore_2017_arrests <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2017", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(pct_unsolved = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)))
# City police made an arrest in 27.35 percent of homicides in 2017 in Baltimore
bmore_2017_arrests <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2017", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(pct_unsolved = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)))
bmore_2014_arrests <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2014", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(pct_unsolved = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)))
# 27% of homicides resulted in arrests in 2017 while 41% of homicides resulted in arrests in 2014
chi_2014_arrests <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Chicago") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2014", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(pct_unsolved = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)))
chi_2017_arrests <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Chicago") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2017", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(pct_unsolved = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)))
# in 2014, Chicago's homicide arrest rate was 29.90 percent. In 2017, Chicago's homicide arrest rate was 8.56 percent.
# 29.90 - 8.56 = 21.34 percentage point drop in homicide arrest rates
bost_2017_arrests <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Boston") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2017", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(pct_unsolved = (closed_by_arrest / (closed_by_arrest + open_no_arrest)))
bost_2014_arrests <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Boston") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2014", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(pct_unsolved = (closed_by_arrest / (closed_by_arrest + open_no_arrest)))
# In 2014 Boston's homicide arrest rate was 52.72 percent. In 2017 Boston's homicide arrest rate was 40.74 percent.
# 52.72 - 40.74 = 11.98 percentage point drop in Boston's homicide arrest rates
louis_2014_arrests <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city == "St. Louis") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2014", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(pct_unsolved = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)))
louis_2017_arrests <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="St. Louis") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2017", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(pct_unsolved = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)))
# in 2014, St. Louis' homicide arrest rate was 40.63 percent. In 2017, St. Louis' homicide arrest rate was 31.68 percent.
# 40.63 - 31.68 = 8.95 percentage point drop in homicide arrest rates
View(baltimore_daily)
View(homicide_data)
View(bmore_2014_arrests)
View(bost_2014_arrests)
View(louis_2014_arrests)
before_2015 <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2017", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(arrest_rate = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)))
View(baltimore_daily)
View(before_2015)
before_2015 <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2017", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(arrest_rate = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)*100))
before_2015 <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2010","2011","2012","2013","2014" reported_date)) %>%
before_2015 <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2010","2011","2012","2013","2014", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(arrest_rate = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)*100))
before_2015 <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2010|2011|2012|2013|2014", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(arrest_rate = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)*100))
#
after_2015 <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2015|2016|2017|2018", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(arrest_rate = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)*100))
View(after_2015)
after_2015 <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2016|2017|2018", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(arrest_rate = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)*100))
after_2015 <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2015|2016|2017|2018", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(arrest_rate = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)*100))
balt_2015_2018 <- homicide_data %>%
clean_names() %>%
as.data.frame() %>%
filter(city =="Baltimore") %>%
select(uid, reported_date, city, state, disposition) %>%
mutate(reported_date = as.numeric(reported_date)) %>%
filter(grepl("2015|2016|2017|2018", reported_date)) %>%
group_by(disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(arrest_rate = (closed_by_arrest / (closed_by_arrest + closed_without_arrest + open_no_arrest)*100))
View(balt_2015_2018)
install.packages("tidycensus")
library(tidyverse)
library(tidycensus)
library(janitor)
census_api_key("7a4a9ebdbde67a87e06f867ed0fde499e1bc46fb", install=TRUE)
pl_2020 <- load_variables(2020, "pl", cache = TRUE)
pl_2020
total_pop_2020 <- get_decennial(geography="state", variables="P1_001N", year=2020)
total_pop_2020
total_pop_2020 <- get_decennial(geography="state", variables="P1_001N", year=2020) %>%
arrange(desc(value))
total_pop_2020
total_pop_2020 <- get_decennial(geography="state", variables="P1_001N", year=2020) %>%
clean_names() %>%
arrange(desc(value)) %>%
rename(total_population = value,
state = name) %>%
select(state, total_population)
total_pop_2020
pct_white_2020 <- get_decennial(geography="us", variables=c("P1_001N","P1_003N"), year=2020)
pct_white_2020
pct_white_2020 <- get_decennial(geography="us", variables=c("P1_001N","P1_003N"), year=2020, output="wide")
pct_white_2020
pct_white_2020 <- get_decennial(geography="us", variables=c("P1_001N","P1_003N"), year=2020, output="wide") %>%
rename(geography = NAME,
total_pop = P1_001N,
white_pop = P1_003N) %>%
select(-GEOID)
pct_white_2020
pct_white_2020 <- get_decennial(geography="us", variables=c("P1_001N","P1_003N"), year=2020, output="wide") %>%
rename(geography = NAME,
total_pop = P1_001N,
white_pop = P1_003N) %>%
select(-GEOID) %>%
mutate(pct_white = white_pop/total_pop*100)
pct_white_2020
md <- get_acs(geography = "county",
variables = c(median_income = "B19013_001"),
state = "MD",
year = 2020) %>%
arrange(desc(estimate))
md
md %>%
mutate(NAME = gsub(" County, Maryland", "", NAME)) %>%
ggplot(aes(x = estimate, y = reorder(NAME, estimate))) +
geom_errorbarh(aes(xmin = estimate - moe, xmax = estimate + moe)) +
geom_point(color = "red") +
labs(title = "Household income by county in Maryland",
subtitle = "2015-2019 American Community Survey",
y = "",
x = "ACS estimate (bars represent margin of error)")
acs_variable <- load_variables(dataset = "acs5", year=2020)
male_pop <- get_acs(geography = "state",
variables = c(total_male_pop = "B26101_001","B26101_012", output="wide")) %>%
arrange(desc(estimate))
male_pop
male_pop <- get_acs(geography = "state",
variables = c(total_male_pop = "B26101_001","B26101_012"), output="wide")) %>%
male_pop <- get_acs(geography = "state",
variables = c(total_male_pop = "B26101_001","B26101_012"), output="wide") %>%
arrange(desc(estimate))
View(acs_variable)
View(male_pop)
male_pop <- get_acs(geography = "state",
variables = c(total_male_pop = "B26101_001","B26101_012"), output="wide") %>%
View(male_pop)
male_pop <- get_acs(geography = "state",
variables = c(total_male_pop = "B26101_001","B26101_012"), output="wide") %>%
mutate(pct_male = male_pop/total_pop*100)) %>%
male_pop <- get_acs(geography = "state",
variables = c(total_male_pop = "B26101_001","B26101_012"), output="wide") %>%
mutate(pct_male = male_pop/total_pop*100) %>%
arrange(desc(estimate))
male_pop <- get_acs(geography = "state",
variables = c(total_pop = "B26101_001",total_male_pop = "B26101_012"),output="wide") %>%
mutate(pct_male = total_male_pop/total_pop*100) %>%
arrange(desc(estimate))
male_pop <- get_acs(geography = "state",
variables = c(total_pop = "B26101_001", male_pop = "B26101_012"),output="wide") %>%
mutate(pct_male = male_pop/total_pop*100) %>%
arrange(desc(estimate))
male_pop <- get_acs(geography = "state",
variables = c(total_pop = "B26101_001", male_pop = "B26101_012"),output="wide") %>%
mutate(male_pop = male_pop/total_pop*100) %>%
arrange(desc(estimate))
pct_male <- get_acs(geography = "state",
variables = c(total_pop = "B26101_001", male_pop = "B26101_012"),output="wide") %>%
mutate(pct_male = male_pop/total_pop*100) %>%
arrange(desc(estimate))
pct_male <- get_acs(geography = "state",
variables = c(total_pop = "B26101_001",
male_pop = "B26101_012"),
output="wide") %>%
mutate(pct_male = male_pop/total_pop*100) %>%
arrange(desc(estimate))
acs_variable <- load_variables(dataset = "acs5", year=2020)
pct_male <- get_acs(geography = "state",
variables = c(total_pop = "B26101_001",
male_pop = "B26101_012"),
output="wide") %>%
mutate(pct_male = male_pop/total_pop*100) %>%
arrange(desc(estimate))
pct_male <- get_acs(geography = "state",
variables = c("B26101_001","B26101_012"),output="wide") %>%
rename(geography = NAME,
total_pop = B26101_001,
male_pop = B26101_012) %>%
select(-GEOID) %>%
mutate(pct_male = male_pop/total_pop*100) %>%
arrange(desc(estimate))
pct_male <- get_acs(geography = "state",
variables = c("B26101_001","B26101_012"),output="wide") %>%
pct_male <- get_acs(geography = "state",
variables = c("B26101_001","B26101_012"),output="wide") %>%
mutate(pct_male = B26101_012/B26101_001*100) %>%
arrange(desc(estimate))
pct_male <- get_acs(geography = "state",
variables = c("B26101_001","B26101_012"),output="wide") %>%
mutate(pct_male = male_pop/total_pop*100) %>%
arrange(desc(estimate))
acs_variable <- load_variables(dataset = "acs5", year=2020)
pct_male <- get_acs(geography = "state",
variables = c("B26101_001","B26101_012"),output="wide") %>%
mutate(pct_male = male_pop/total_pop*100) %>%
arrange(desc(estimate))
pct_male <- get_acs(geography = "state",
variables = c("B26101_001","B26101_012"),output="wide") %>%
mutate(pct_male = male_pop/pop*100) %>%
arrange(desc(estimate))
pct_male <- get_acs(geography = "state",
variables = c("B26101_001","B26101_012"),output="wide") %>%
mutate(pct_male = male_pop/total_pop_2020*100) %>%
arrange(desc(estimate))
pct_male <- get_acs(geography = "state",
variables = c("B26101_001","B26101_012"),output="wide") %>%
mutate(pct_male = "male_pop"/"total_pop_2020"*100) %>%
arrange(desc(estimate))
pct_male <- get_acs(geography = "state",
variables = c("B26101_001","B26101_012"),output="wide") %>%
mutate(pct_male = "male_pop"/"total_pop"*100) %>%
arrange(desc(estimate))
pct_male <- get_acs(geography = "state",
variables = c("B01001_001","B01001_012"),output="wide") %>%
mutate(pct_male = male_pop/total_pop*100) %>%
arrange(desc(estimate))
library(tidyverse)
library(janitor)
library(ggthemes)
median_income <- read_csv("median_income.csv") %>%
clean_names()
vacant_houses <- read_csv("vacant_houses.csv") %>%
clean_names()
View(median_income)
View(vacant_houses)
income_vacancy <- median_income %>%
inner_join(vacant_houses, by="community") %>%
arrange(desc(income_2020)) %>%
filter(income_vacancy, community == "Greater Mondawmin","Penn North/Reservoir Hill","Midtown","Baltimore City")
income_vacancy <- median_income %>%
inner_join(vacant_houses, by="community") %>%
arrange(desc(income_2020)) %>%
filter(community == "Greater Mondawmin","Penn North/Reservoir Hill","Midtown","Baltimore City")
income_vacancy <- median_income %>%
inner_join(vacant_houses, by="community") %>%
arrange(desc(income_2020)) %>%
filter(grepl(community == "Greater Mondawmin"|"Penn North/Reservoir Hill"|"Midtown"|"Baltimore City"))
income_vacancy <- median_income %>%
inner_join(vacant_houses, by="community") %>%
arrange(desc(income_2020)) %>%
filter(grepl("Greater Mondawmin"|"Penn North/Reservoir Hill"|"Midtown"|"Baltimore City", community))
library(tidyverse)
library(janitor)
library(ggthemes)
library(dplyr)
income_vacancy <- median_income %>%
inner_join(vacant_houses, by="community") %>%
arrange(desc(income_2020)) %>%
filter(community=="Greater Mondawmin", community=="Penn North/Reservoir Hill", community=="Midtown", community=="Baltimore City")
income_vacancy
View(income_vacancy)
income_vacancy <- median_income %>%
inner_join(vacant_houses, by="community") %>%
arrange(desc(income_2020)) %>%
select(community, income_2010, income_2020, vacant_2010, vacant_2020) %>%
filter((community=="Greater Mondawmin")|(community=="Penn North/Reservoir Hill")|(community=="Midtown")| (community=="Baltimore City"))
income_vacancy
library(tidyverse)
library(janitor)
library(ggthemes)
library(dplyr)
library(ggrepel)
income_vacancy %>%
ggplot(aes(x = community)) +
geom_point() +
geom_text_repel(aes(label=community),hjust=0, vjust=0) +
#scale_x_continuous(limits=c(1,300)) +
labs(
title = "Income and Vacancy of Baltimore Neighborhoods 2010 to 2020",
x = "Community",
caption = "source: BNIA Data - By: Parker Leipzig"
)
income_vacancy %>%
ggplot(aes(x = community)) +
geom_line(aes(y=income_2010), color = "blue") +
geom_line(aes(y=income_2020), color = "green") +
geom_line(aes(y=vacant_2010), color = "red") +
geom_line(aes(y=vacant_2020), color = "yellow")
labs(
title = "Income and Vacancy of Baltimore Neighborhoods 2010 to 2020",
x = "Community",
caption = "source: BNIA Data - By: Parker Leipzig"
)
income_vacancy %>%
ggplot(aes(x = community)) +
geom_line(aes(y=income_2010$Midtown), color = "blue") +
#geom_line(aes(y=income_2020), color = "green") +
#geom_line(aes(y=vacant_2010), color = "red") +
#geom_line(aes(y=vacant_2020), color = "yellow")
labs(
title = "Income and Vacancy of Baltimore Neighborhoods 2010 to 2020",
x = "Community",
caption = "source: BNIA Data - By: Parker Leipzig"
)
