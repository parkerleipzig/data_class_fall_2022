library(tidyverse)
library(janitor)
library(sf)
homicides <- read_rds("data/baltimore_homicides.rds") %>%
clean_names
census_tracts <- read_rds("data/baltimore_tract_shapefiles.rds") %>%
clean_names
demographics <- read_rds("data/baltimore_tract_demographics.rds") %>%
clean_names
View(demographics)
majority_white_tracts <- demographics %>%
mutate(pct_white = white_pop/total_pop) %>%
select(geoid, name, pct_white) %>%
mutate(neighborhood_demo = case_when(
pct_white > 0.50 ~ "majority white",
pct_white < 0.50 ~ "not majority white"
))
View(majority_white_tracts)
View(demographics)
majority_white_tracts <- majority_white_tracts %>%
inner_join(census_tracts) %>%
st_as_sf()
View(homicides)
library(tidyverse)
library(janitor)
library(ggthemes)
# Remove scientific notation
options(scipen=999)
library(tidyr)
#adding and cleaning data
street_lights <- read.csv("street_lights.csv") %>%
clean_names
median_income <- read.csv("income.csv") %>%
clean_names
glimpse(median_income)
whole_data <- street_lights %>%
inner_join(median_income, by="community") %>%
arrange(income)
whole_data
#arranging to get the data for the neighborhoods in Baltimore with the top 10 lowest median income
whole_data10 <- whole_data %>%
arrange(income) %>%
slice_min(income, n = 10)
#analysis graph to display this data
#this compares how many street lights are out per 1,000 residents in the 10 neighborhoods with the lowest median incomes for 2020
whole_data10 %>%
ggplot(aes(community, income, fill = x2020_data)) +
geom_bar(stat="identity", position = "dodge") +
coord_flip() +
scale_fill_gradient(low="grey",high="blue") +
labs(
title = "Street Light Outages in Low Income Balt Neighborhoods",
fill = "Street Light Outages",
subtitle = "BNIA Data 2020",
caption = "Graphic Made by Parker Leipzig",
x = "Income",
y = "Community"
)
whole_data10 %>%
ggplot(aes(x = reorder(community, -x2020_data), y=x2020_data, fill = x2020_data)) +
geom_bar(stat="identity", position = "dodge") +
theme(legend.position = "none") +
coord_flip() +
scale_fill_gradient(low="grey",high="blue") +
labs(
title = "Street Light Outages in Low Income Balt Neighborhoods",
subtitle ="Citywide average: 22 Street Light Outages / 1000 People",
caption = "BNIA Data 2020,Graphic by Parker Leipzig / Rob Wells",
x = "",
y = "Street Lights Out Per 1000 People"
)
whole_data10 %>%
ggplot(aes(x = reorder(community, -x2020_data), y=x2020_data, fill = x2020_data)) +
geom_bar(stat="identity", position = "dodge") +
theme(legend.position = "none") +
coord_flip() +
scale_fill_gradient(low="grey",high="blue") +
labs(
title = "Street Light Outages in Low Income Balt Neighborhoods",
subtitle ="Citywide average: 22 Street Light Outages / 1000 People",
caption = "BNIA Data 2020,Graphic by Parker Leipzig / Rob Wells",
x = "",
y = "Street Lights Out Per 1000 People"
)
#creates dataframe for 10 highest median income neighborhoods
topincome <- whole_data %>%
arrange(desc(income)) %>%
slice_max(income, n = 10)
#analysis graph to display this data
#this compares how many street lights are out per 1,000 residents in the 10 neighborhoods with the highest median incomes for 2020
topincome %>%
ggplot(aes(x = reorder(community, -x2020_data), y=x2020_data, fill = x2020_data)) +
geom_bar(stat="identity", position = "dodge") +
theme(legend.position = "none") +
coord_flip() +
scale_fill_gradient(low="grey",high="blue") +
labs(
title = "Street Light Outages in High Income Balt Neighborhoods",
subtitle ="Citywide average: 22 Street Light Outages / 1000 People",
caption = "BNIA Data 2020,Graphic by Parker Leipzig / Rob Wells",
x = "",
y = "Street Lights Out Per 1000 People"
)
killings <- homicides %>%
st_join(majority_white_tracts)
View(killings)
crime_by_neighborhoods <- killings %>%
group_by(neighborhood_demo, disposition) %>%
count() %>%
pivot_wider(names_from = disposition, values_from = n) %>%
clean_names() %>%
mutate(total_homicides = closed_by_arrest+closed_without_arrest+open_no_arrest) %>%
mutate(unsolved = open_no_arrest+closed_without_arrest) %>%
mutate(pct_unsolved = unsolved/total_homicides*100)
crime_by_neighborhoods <- killings %>%
group_by(neighborhood_demo, disposition) %>%
count() %>%
pivot_wider(names_from =disposition, values_from =n) %>%
clean_names() %>%
mutate(total_homicides = closed_by_arrest+closed_without_arrest+open_no_arrest) %>%
mutate(unsolved = open_no_arrest + closed_without_arrest) %>%
mutate(pct_unsolved = unsolved/total_homicides*100)
crime_by_neighborhoods <- killings %>%
group_by(disposition, neighborhood_demo) %>%
count() %>%
pivot_wider(names_from =disposition, values_from =n) %>%
clean_names() %>%
mutate(total_homicides = closed_by_arrest+closed_without_arrest+open_no_arrest) %>%
mutate(unsolved = open_no_arrest + closed_without_arrest) %>%
mutate(pct_unsolved = unsolved/total_homicides*100)
crime_by_neighborhoods <- killings %>%
group_by(disposition,neighborhood_demo) %>%
count() %>%
pivot_wider(names_from =disposition, values_from =n) %>%
clean_names() %>%
mutate(total_homicides = closed_by_arrest+closed_without_arrest+open_no_arrest) %>%
mutate(unsolved = open_no_arrest + closed_without_arrest) %>%
mutate(pct_unsolved = unsolved/total_homicides*100)
crime_by_neighborhoods <- killings %>%
group_by("disposition","neighborhood_demo") %>%
count() %>%
pivot_wider(names_from ="disposition", values_from ="n") %>%
clean_names() %>%
mutate(total_homicides = closed_by_arrest+closed_without_arrest+open_no_arrest) %>%
mutate(unsolved = open_no_arrest + closed_without_arrest) %>%
mutate(pct_unsolved = unsolved/total_homicides*100)
majority_white_tracts <- demographics %>%
mutate(pct_white = white_pop/total_pop) %>%
select(geoid, name, pct_white) %>%
mutate(neighborhood_demo = case_when(
pct_white > 0.50 ~ "majority white",
pct_white < 0.50 ~ "not majority white"
))
majority_white_tracts <- majority_white_tracts %>%
inner_join(census_tracts) %>%
st_as_sf()
killings <- homicides %>%
st_join(majority_white_tracts)
crime_by_neighborhoods <- killings %>%
group_by("disposition","neighborhood_demo") %>%
count() %>%
pivot_wider(names_from ="disposition", values_from ="n") %>%
clean_names() %>%
mutate(total_homicides = closed_by_arrest+closed_without_arrest+open_no_arrest) %>%
mutate(unsolved = open_no_arrest + closed_without_arrest) %>%
mutate(pct_unsolved = unsolved/total_homicides*100)
majority_white_tracts <- demographics %>%
mutate(pct_white = white_pop/total_pop) %>%
select(geoid, name, pct_white) %>%
mutate(neighborhood_demo = case_when(
pct_white > 0.50 ~ "majority white",
pct_white < 0.50 ~ "not majority white"
))
majority_white_tracts <- majority_white_tracts %>%
inner_join(census_tracts) %>%
st_as_sf()
killings <- homicides %>%
st_join(majority_white_tracts)
crime_by_neighborhoods <- killings %>%
group_by("disposition","neighborhood_demo") %>%
count() %>%
pivot_wider(names_from ="disposition", values_from ="n") %>%
clean_names() %>%
mutate(total_homicides = closed_by_arrest+closed_without_arrest+open_no_arrest) %>%
mutate(unsolved = open_no_arrest + closed_without_arrest) %>%
mutate(pct_unsolved = unsolved/total_homicides*100)
majority_white_tracts <- demographics %>%
mutate(pct_white = white_pop/total_pop) %>%
select(geoid, name, pct_white) %>%
mutate(neighborhood_demo = case_when(
pct_white > 0.50 ~ "majority white",
pct_white < 0.50 ~ "not majority white"
))
majority_white_tracts <- majority_white_tracts %>%
inner_join(census_tracts) %>%
st_as_sf()
killings <- homicides %>%
st_join(majority_white_tracts)
crime_by_neighborhoods <- killings %>%
group_by(neighborhood_demo,disposition) %>%
count() %>%
pivot_wider(names_from ="disposition", values_from ="n") %>%
clean_names() %>%
mutate(total_homicides = closed_by_arrest+closed_without_arrest+open_no_arrest) %>%
mutate(unsolved = open_no_arrest + closed_without_arrest) %>%
mutate(pct_unsolved = unsolved/total_homicides*100)
majority_white_tracts <- demographics %>%
mutate(pct_white = white_pop/total_pop) %>%
select(geoid, name, pct_white) %>%
mutate(neighborhood_demo = case_when(
pct_white > 0.50 ~ "majority white",
pct_white < 0.50 ~ "not majority white"
))
majority_white_tracts <- majority_white_tracts %>%
inner_join(census_tracts) %>%
st_as_sf()
killings <- homicides %>%
st_join(majority_white_tracts)
crime_by_neighborhoods <- killings %>%
group_by(neighborhood_demo,disposition) %>%
count() %>%
pivot_wider(names_from ="disposition", values_from ="n") %>%
clean_names() %>%
mutate(total_homicides = closed_by_arrest+closed_without_arrest+open/no_arrest) %>%
mutate(unsolved = open_no_arrest + closed_without_arrest) %>%
mutate(pct_unsolved = unsolved/total_homicides*100)
crime_by_neighborhoods <- killings %>%
clean_names() %>%
group_by(neighborhood_demo,disposition) %>%
count() %>%
pivot_wider(names_from ="disposition", values_from ="n") %>%
mutate(total_homicides = closed_by_arrest+closed_without_arrest+open_no_arrest) %>%
mutate(unsolved = open_no_arrest + closed_without_arrest) %>%
mutate(pct_unsolved = unsolved/total_homicides*100)
crime_by_neighborhoods <- killings %>%
clean_names() %>%
group_by(neighborhood_demo,disposition) %>%
count() %>%
pivot_wider(names_from ="disposition", values_from ="n") %>%
mutate(total_homicides = Closed_by_arrest+Closed_without_arrest+Open_No_arrest) %>%
mutate(unsolved = Open_no_arrest + Closed_without_arrest) %>%
mutate(pct_unsolved = unsolved/total_homicides*100)
crime_by_neighborhoods <- killings %>%
clean_names() %>%
group_by(neighborhood_demo,disposition) %>%
count() %>%
pivot_wider(names_from="disposition", values_from="n") %>%
mutate(total_homicides = "Closed_by_arrest"+"Closed_without_arrest"+"Open_No_arrest") %>%
mutate(unsolved = "Open_no_arrest" + "Closed_without_arrest") %>%
mutate(pct_unsolved = unsolved/total_homicides*100)
crime_by_neighborhoods <- killings %>%
group_by(neighborhood_demo,disposition) %>%
count() %>%
pivot_wider(names_from="disposition", values_from="n") %>%
clean_names() %>%
mutate(total_homicides = Closed_by_arrest+Closed_without_arrest+Open_No_arrest) %>%
mutate(unsolved = Open_no_arrest + Closed_without_arrest) %>%
mutate(pct_unsolved = unsolved/total_homicides*100)
crime_by_neighborhoods <- killings %>%
group_by(neighborhood_demo,disposition) %>%
count() %>%
pivot_wider(names_from="disposition", values_from="n") %>%
clean_names() %>%
mutate(total_homicides = "Closed by arrest"+"Closed without arrest"+"Open/No arrest") %>%
mutate(unsolved = "Open/No arrest" + "Closed without arrest") %>%
mutate(pct_unsolved = unsolved/total_homicides*100)
crime_by_neighborhoods <- killings %>%
group_by(neighborhood_demo,disposition) %>%
count() %>%
pivot_wider(names_from="disposition", values_from="n") %>%
clean_names() %>%
mutate(total_homicides = "Closed by arrest"+"Closed without arrest"+"Open/No arrest") %>%
mutate(unsolved = "Open/No arrest"+"Closed without arrest") %>%
mutate(pct_unsolved = unsolved/total_homicides*100)
crime_by_neighborhoods <- killings %>%
group_by(neighborhood_demo,disposition) %>%
count() %>%
pivot_wider(names_from="disposition", values_from="n") %>%
clean_names() %>%
mutate(total_homicides = Closed_by_arrest + Closed_without_arrest + Open_No_arrest) %>%
mutate(unsolved = Open_No_arrest + Closed_without_arrest) %>%
mutate(pct_unsolved = unsolved/total_homicides*100)
library(tidyverse)
library(janitor)
library(sf)
homicides <- read_rds("data/baltimore_homicides.rds") %>%
clean_names
census_tracts <- read_rds("data/baltimore_tract_shapefiles.rds") %>%
clean_names
demographics <- read_rds("data/baltimore_tract_demographics.rds") %>%
clean_names
majority_white_tracts <- demographics %>%
mutate(pct_white = white_pop/total_pop) %>%
select(geoid, name, pct_white) %>%
mutate(neighborhood_demo = case_when(
pct_white > 0.50 ~ "majority white",
pct_white < 0.50 ~ "not majority white"
))
majority_white_tracts <- majority_white_tracts %>%
inner_join(census_tracts) %>%
st_as_sf()
killings <- homicides %>%
st_join(majority_white_tracts)
crime_by_neighborhoods <- killings %>%
group_by(neighborhood_demo,disposition) %>%
count() %>%
pivot_wider(names_from="disposition", values_from="n") %>%
clean_names() %>%
mutate(total_homicides = Closed_by_arrest + Closed_without_arrest + Open_No_arrest) %>%
mutate(unsolved = Open_No_arrest + Closed_without_arrest) %>%
mutate(pct_unsolved = unsolved/total_homicides*100)
crime_by_neighborhoods <- killings %>%
group_by(neighborhood_demo,disposition) %>%
count() %>%
pivot_wider(names_from="disposition", values_from="n") %>%
clean_names() %>%
mutate(total_homicides = Closed_by_arrest + Closed_without_arrest + Open_No_arrest,
unsolved = Open_No_arrest + Closed_without_arrest,
pct_unsolved = unsolved/total_homicides*100)
crime_by_neighborhoods <- killings %>%
group_by(neighborhood_demo,disposition) %>%
count() %>%
pivot_wider(names_from="disposition", values_from="n") %>%
clean_names() %>%
mutate(total_homicides = Closed_by_arrest + Closed_without_arrest + Open_No_arrest)
names(killings)
names(crime_by_neighborhoods)
names(crime_by_neighborhood)
crime_by_neighborhoods <- killings %>%
group_by(neighborhood_demo,disposition) %>%
count() %>%
pivot_wider(names_from="disposition", values_from="n") %>%
clean_names()
names(crime_by_neighborhoods)
crime_by_neighborhoods <- killings %>%
group_by(neighborhood_demo,disposition) %>%
count() %>%
pivot_wider(names_from="disposition", values_from="n") %>%
clean_names() %>%
mutate(total_homicides = (Closed_by_arrest + Closed_without_arrest + 'Open/No_arrest'))
crime_by_neighborhoods <- killings %>%
group_by(neighborhood_demo,disposition) %>%
count() %>%
pivot_wider(names_from="disposition", values_from="n") %>%
clean_names() %>%
mutate(total_homicides = (closed_by_arrest + closed_without_arrest + 'Open/No_arrest'))
crime_by_neighborhoods <- killings %>%
group_by(neighborhood_demo,disposition) %>%
count() %>%
pivot_wider(names_from="disposition", values_from="n") %>%
clean_names() %>%
rename(open_no_arrest = `Open/No arrest`)
crime_by_neighborhoods <- killings %>%
group_by(neighborhood_demo,disposition) %>%
count() %>%
pivot_wider(names_from="disposition", values_from="n") %>%
clean_names() %>%
rename(open_no_arrest = 'Open/No arrest')
names(crime_by_neighborhoods)
crime_by_neighborhoods$open_no_arrest <- crime_by_neighborhoods$`Open/No arrest`
names(crime_by_neighborhoods)
crime_by_neighborhoods %>%
mutate(total_homicides = (closed_by_arrest + closed_without_arrest + open_no_arrest))
View(crime_by_neighborhoods)
glimpse(crime_by_neighborhoods)
crime_by_neighborhoods %>%
mutate(total_homicides = (closed_by_arrest + closed_without_arrest + open_no_arrest, rm.na=TRUE))
crime_by_neighborhoods %>%
mutate(total_homicides = (closed_by_arrest + closed_without_arrest + open_no_arrest),rm.na=TRUE)
crime_by_neighborhoods %>%
mutate(total_homicides = closed_by_arrest + closed_without_arrest + open_no_arrest, na.rm=TRUE)
crime_by_neighborhoods <- killings %>%
crime_by_neighborhoods$open_no_arrest <- crime_by_neighborhoods$`Open/No arrest` %>%
group_by(neighborhood_demo,disposition) %>%
count() %>%
pivot_wider(names_from="disposition", values_from="n") %>%
clean_names() %>%
mutate(total_homicides = closed_by_arrest + closed_without_arrest + open_no_arrest, na.rm=TRUE)
crime_by_neighborhoods <- killings %>%
group_by(neighborhood_demo,disposition) %>%
crime_by_neighborhoods$open_no_arrest <- crime_by_neighborhoods$`Open/No arrest` %>%
count() %>%
pivot_wider(names_from="disposition", values_from="n") %>%
clean_names() %>%
mutate(total_homicides = closed_by_arrest + closed_without_arrest + open_no_arrest, na.rm=TRUE)
crime_by_neighborhoods %>%
mutate(total_homicides = closed_by_arrest + closed_without_arrest + open_no_arrest)
crime_by_neighborhoods %>%
mutate(total_homicides = closed_by_arrest+closed_without_arrest+open_no_arrest)
crime_by_neighborhoods %>%
mutate(total_homicides = closed_by_arrest+closed_without_arrest)
crime_by_neighborhoods <- killings %>%
group_by(neighborhood_demo,disposition) %>%
crime_by_neighborhoods$open_no_arrest <- crime_by_neighborhoods$`Open/No arrest` %>%
count() %>%
pivot_wider(names_from="disposition", values_from="n") %>%
clean_names() %>%
as.tibble()
crime_by_neighborhoods <- killings %>%
group_by(neighborhood_demo,disposition) %>%
count() %>%
pivot_wider(names_from="disposition", values_from="n") %>%
clean_names() %>%
as.tibble()
crime_by_neighborhoods %>%
mutate(total_homicides = closed_by_arrest+closed_without_arrest+open_no_arrest)
crime_by_neighborhoods$open_no_arrest <- crime_by_neighborhoods$`Open/No arrest`
crime_by_neighborhoods %>%
mutate(total_homicides = closed_by_arrest+closed_without_arrest+open_no_arrest)
crime_by_neighborhoods <- killings %>%
group_by(neighborhood_demo,disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
as.tibble()
crime_by_neighborhoods <- killings %>%
group_by(neighborhood_demo,disposition) %>%
count() %>%
pivot_wider(names_from='disposition', values_from='n') %>%
clean_names() %>%
as.tibble()
View(crime_by_neighborhoods)
View(killings)
killings <- homicides %>%
st_join(majority_white_tracts) %>%
as_tibble()
crime_by_neighborhoods <- killings %>%
group_by(neighborhood_demo,disposition) %>%
count() %>%
pivot_wider(names_from='disposition', values_from='n') %>%
clean_names()
crime_by_neighborhoods$open_no_arrest <- crime_by_neighborhoods$`Open/No arrest`
crime_by_neighborhoods %>%
mutate(total_homicides = closed_by_arrest+closed_without_arrest+open_no_arrest)
crime_by_neighborhoods <- killings %>%
group_by(neighborhood_demo,disposition) %>%
count() %>%
pivot_wider(names_from='disposition', values_from='n') %>%
clean_names()
crime_by_neighborhoods$open_no_arrest <- crime_by_neighborhoods$`Open/No arrest`
names(crime_by_neighborhoods)
crime_by_neighborhoods <- killings %>%
group_by(neighborhood_demo,disposition) %>%
count() %>%
pivot_wider(names_from='disposition', values_from='n') %>%
clean_names()
names(crime_by_neighborhoods)
crime_by_neighborhoods %>%
mutate(total_homicides = closed_by_arrest+closed_without_arrest+open_no_arrest)
crime_by_neighborhoods %>%
mutate(total_homicides = closed_by_arrest+closed_without_arrest+open_no_arrest) %>%
mutate(unsolved = open_No_arrest+closed_without_arrest) %>%
mutate(pct_unsolved = unsolved/total_homicides*100)
crime_by_neighborhoods %>%
mutate(total_homicides = closed_by_arrest+closed_without_arrest+open_no_arrest) %>%
mutate(unsolved = open_no_arrest+closed_without_arrest) %>%
mutate(pct_unsolved = unsolved/total_homicides*100)
ggplot() +
geom_sf(data=census_tracts) +
geom_sf(data=homicides)
crime_by_neighborhoods <- killings %>%
group_by(neighborhood_demo,disposition) %>%
count() %>%
pivot_wider(names_from='disposition', values_from='n') %>%
clean_names() %>%
mutate(total_homicides = closed_by_arrest+closed_without_arrest+open_no_arrest) %>%
mutate(unsolved = open_no_arrest+closed_without_arrest) %>%
mutate(pct_unsolved = unsolved/total_homicides*100)
majority_white_tracts <- demographics %>%
mutate(pct_white = white_pop/total_pop) %>%
select(geoid, name, pct_white) %>%
mutate(neighborhood_demo = case_when(
pct_white > 0.50 ~ "majority white",
pct_white < 0.50 ~ "not majority white"
))
majority_white_tracts <- majority_white_tracts %>%
inner_join(census_tracts) %>%
st_as_sf()
killings <- homicides %>%
st_join(majority_white_tracts) %>%
as_tibble()
crime_by_neighborhoods <- killings %>%
group_by(neighborhood_demo,disposition) %>%
count() %>%
pivot_wider(names_from='disposition', values_from='n') %>%
clean_names() %>%
mutate(total_homicides = closed_by_arrest+closed_without_arrest+open_no_arrest) %>%
mutate(unsolved = open_no_arrest+closed_without_arrest) %>%
mutate(pct_unsolved = unsolved/total_homicides*100)
ggplot() +
geom_sf(data=census_tracts) +
geom_sf(data=homicides)
