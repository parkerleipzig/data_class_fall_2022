# Read in all html from table, get the HTML table.
results <- sboe_url %>%
read_html() %>%
html_table()
# Standardize column headers with rename()
# remove last row with slice()
# apply parse_number to columns 2,3,4 and 5.
results <- results[[1]] %>%
clean_names() %>%
rename(cox = 2, ficker = 3, schulz = 4, werner = 5) %>%
slice(-25) %>%
mutate(across(c(2:5), parse_number))
# show the dataframe
results
gov_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_results_2022_1.html"
results <- gov_url %>%
read_html() %>%
html_table()
results <- results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(2:6), parse_number))
results
gov_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_results_2022_1.html"
results <- gov_url %>%
read_html() %>%
html_table()
results <- results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(3:6), parse_number))
results
mutate(pct_election_day = (election_day)/(early_voting + election_day)*100)
gov_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_results_2022_1.html"
results <- gov_url %>%
read_html() %>%
html_table()
results <- results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(3:6), parse_number)) %>%
mutate(pct_election_day = ("election_day")/("early_voting" + "election_day")*100)
gov_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_results_2022_1.html"
results <- gov_url %>%
read_html() %>%
html_table()
results <- results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(3:6), parse_number)) %>%
View(results)
gov_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_results_2022_1.html"
results <- gov_url %>%
read_html() %>%
html_table()
results <- results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(3:6), parse_number)) %>%
#mutate(pct_election_day = (election_day)/(early_voting + election_day)*100)
results
gov_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_results_2022_1.html"
results <- gov_url %>%
read_html() %>%
html_table()
results <- results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(3:6), parse_number)) %>%
results
gov_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_results_2022_1.html"
results <- gov_url %>%
read_html() %>%
html_table()
results <- results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(3:6), parse_number)) %>%
results
library(tidyverse)
library(tidycensus)
library(rvest)
library(janitor)
gov_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_results_2022_1.html"
results <- gov_url %>%
read_html() %>%
html_table()
results <- results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(3:6), parse_number)) %>%
results
gov_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_results_2022_1.html"
results <- gov_url %>%
read_html() %>%
html_table()
results <- results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(3:6), parse_number))
results
results %>%
mutate(pct_election_day = (election_day)/(early_voting + election_day)*100)
results %>%
mutate(pct_election_day = (election_day)/(total)*100)
gov_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_results_2022_1.html"
results <- gov_url %>%
read_html() %>%
html_table()
results <- results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(3:6), parse_number))
View(results)
results %>%
mutate(pct_election_day = (election_day)/(total)*100)
results %>%
as.numeric(mutate(pct_election_day = (election_day)/(total)*100))
results %>%
mutate(as.numeric(pct_election_day = (election_day)/(total)*100))
gov_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_results_2022_1.html"
results <- gov_url %>%
read_html() %>%
html_table()
results <- results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(3:6), parse_number))
results %>%
mutate(as.numeric(pct_election_day = (election_day(total)*100))
gov_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_results_2022_1.html"
results <- gov_url %>%
read_html() %>%
html_table()
results <- results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(3:6), parse_number))
results %>%
mutate(as.numeric(pct_election_day = (election_day(total)*100)))
gov_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_results_2022_1.html"
results <- gov_url %>%
read_html() %>%
html_table()
results <- results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(3:6), parse_number))
results %>%
mutate(pct_election_day = (election_day / total)*100)
gov_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_results_2022_1.html"
results <- gov_url %>%
read_html() %>%
html_table()
results <- results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(3:6), parse_number)) %>%
mutate(pct_election_day = (election_day / total)*100)
gov_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_results_2022_1.html"
results <- gov_url %>%
read_html() %>%
html_table()
gov_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_results_2022_1.html"
results <- gov_url %>%
read_html() %>%
html_table()
results
glimpse(results)
gov_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_results_2022_1.html"
results <- gov_url %>%
read_html() %>%
html_table()
results
results <- results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(3:8), parse_number)) %>%
mutate(pct_election_day = (election_day / total)*100)
gov_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_results_2022_1.html"
results <- gov_url %>%
read_html() %>%
html_table()
results <- results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(3:8), parse_number)) %>%
mutate(pct_election_day = (election_day / total)*100)
View(results)
gov_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_results_2022_1.html"
results <- gov_url %>%
read_html() %>%
html_table()
results <- results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(3:8), parse_number)) %>%
mutate(pct_election_day = (election_day / total)*100)
gov_final <- results %>%
select(name, pct_election_day)
gov_final
senate_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
results <- senate_url %>%
read_html() %>%
html_table()
results <- results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(2:5), parse_number))
gov_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_results_2022_1.html"
gov_results <- gov_url %>%
read_html() %>%
html_table()
gov_results <- gov_results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(3:8), parse_number)) %>%
mutate(pct_election_day = (election_day / total)*100)
gov_final <- results %>%
select(name, pct_election_day)
gov_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_results_2022_1.html"
gov_results <- gov_url %>%
read_html() %>%
html_table()
gov_results <- gov_results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(3:8), parse_number)) %>%
mutate(pct_election_day = (election_day / total)*100)
gov_final <- gov_results %>%
select(name, pct_election_day)
gov_final
senate_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
sen_results <- senate_url %>%
read_html() %>%
html_table()
sen_results <- sen_results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(2:5), parse_number))
senate_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
sen_results <- senate_url %>%
read_html() %>%
html_table()
sen_results <- sen_results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(2:5), parse_number))
sen_results
case_when(
chris_van_hollen_democratic > chris_chafee_republican ~ "Van Hollen"
)
View(sen_results)
library(tidyverse)
library(tidycensus)
library(rvest)
library(janitor)
library(dplyr)
senate_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
sen_results <- senate_url %>%
read_html() %>%
html_table()
sen_results <- sen_results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(2:5), parse_number)) %>%
case_when(
chris_van_hollen_democratic > chris_chafee_republican ~ "Van Hollen"
)
senate_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
sen_results <- senate_url %>%
read_html() %>%
html_table()
sen_results <- sen_results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(2:5), parse_number)) %>%
case_when(sen_results$chris_van_hollen_democratic > sen_results$chris_chafee_republican ~ "Van Hollen", FALSE ~ "Chafee")
senate_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
sen_results <- senate_url %>%
read_html() %>%
html_table()
sen_results <- sen_results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(2:5), parse_number)) %>%
case_when(chris_van_hollen_democratic > chris_chafee_republican ~ "Van Hollen", FALSE ~ "Chafee")
senate_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
sen_results <- senate_url %>%
read_html() %>%
html_table()
sen_results <- sen_results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(2:5), parse_number)) %>%
case_when(chris_van_hollen_democratic > chris_chafee_republican ~ "Van Hollen"
, TRUE ~ "Chafee")
senate_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
sen_results <- senate_url %>%
read_html() %>%
html_table()
sen_results <- sen_results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(2:5), parse_number)) %>%
case_when(
chris_van_hollen_democratic > chris_chafee_republican ~ "Van Hollen", TRUE ~   "Chafee")
senate_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
sen_results <- senate_url %>%
read_html() %>%
html_table()
sen_results <- sen_results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(2:5), parse_number)) %>%
mutate(case_when(
chris_van_hollen_democratic > chris_chafee_republican ~ "Van Hollen", TRUE ~   "Chafee"))
senate_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
sen_results <- senate_url %>%
read_html() %>%
html_table()
sen_results <- sen_results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(2:5), parse_number)) %>%
mutate(case_when(
chris_van_hollen_democratic > chris_chaffee_republican ~ "Van Hollen", TRUE ~   "Chaffee"))
senate_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
sen_results <- senate_url %>%
read_html() %>%
html_table()
sen_results <- sen_results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(2:5), parse_number)) %>%
mutate(case_when(
chris_van_hollen_democratic > chris_chaffee_republican ~ "Van Hollen", TRUE ~   "Chaffee"))
sen_results
senate_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
sen_results <- senate_url %>%
read_html() %>%
html_table()
sen_results <- sen_results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(2:5), parse_number)) %>%
mutate(Results = case_when(
chris_van_hollen_democratic > chris_chaffee_republican ~ "Van Hollen", TRUE ~   "Chaffee"))
sen_results
senate_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
sen_results <- senate_url %>%
read_html() %>%
html_table()
sen_results <- sen_results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(2:5), parse_number)) %>%
mutate(Results = case_when(
chris_van_hollen_democratic > chris_chaffee_republican ~ "Van Hollen", TRUE ~   "Chaffee")) %>%
group_by(Results)
sen_results
senate_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
sen_results <- senate_url %>%
read_html() %>%
html_table()
sen_results <- sen_results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(2:5), parse_number)) %>%
mutate(Results = case_when(
chris_van_hollen_democratic > chris_chaffee_republican ~ "Van Hollen", TRUE ~   "Chaffee")) %>%
group_by(Results) %>%
count(Results)
sen_results
View(sen_results)
pct_van_hollen <- get_acs(geography = "county",
variables = c(median_income = "B19013_001"),
state = "MD",
year = 2020) %>%
arrange(desc(estimate))
View(pct_van_hollen)
senate_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
sen_results <- senate_url %>%
read_html() %>%
html_table()
sen_results <- sen_results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(2:5), parse_number)) %>%
mutate(Results = case_when(
chris_van_hollen_democratic > chris_chaffee_republican ~ "Van Hollen", TRUE ~   "Chaffee")) %>%
van_hollen <- sen_results %>%
group_by(Results) %>%
count(Results)
senate_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
sen_results <- senate_url %>%
read_html() %>%
html_table()
sen_results <- sen_results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(2:5), parse_number)) %>%
mutate(Results = case_when(
chris_van_hollen_democratic > chris_chaffee_republican ~ "Van Hollen", TRUE ~   "Chaffee"))
van_hollen <- sen_results %>%
group_by(Results) %>%
count(Results)
sen_results
senate_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
sen_results <- senate_url %>%
read_html() %>%
html_table()
sen_results <- sen_results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(2:5), parse_number)) %>%
mutate(Results = case_when(
chris_van_hollen_democratic > chris_chaffee_republican ~ "Van Hollen", TRUE ~   "Chaffee"))
van_hollen <- sen_results %>%
group_by(Results) %>%
count(Results)
van_hollen
md_income <- get_acs(geography = "county",
variables = c(median_income = "B19013_001"),
state = "MD",
year = 2020) %>%
arrange(desc(estimate))
sen_results %>%
mutate(pct_van_hollen = (chris_van_hollen_democratic)/(chris_van_hollen_democratic + chris_chaffee_republican + scottie_griffin_write_in_democratic + andrew_j_wildman_write_in_unaffiliated + other_write_ins))
md_income <- get_acs(geography = "county",
variables = c(median_income = "B19013_001"),
state = "MD",
year = 2020) %>%
arrange(desc(estimate))
sen_results %>%
mutate(as.numeric(pct_van_hollen = (chris_van_hollen_democratic)/(chris_van_hollen_democratic + chris_chaffee_republican + scottie_griffin_write_in_democratic + andrew_j_wildman_write_in_unaffiliated + other_write_ins)))
senate_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
sen_results <- senate_url %>%
read_html() %>%
html_table()
sen_results <- sen_results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(2:6), parse_number)) %>%
mutate(Results = case_when(
chris_van_hollen_democratic > chris_chaffee_republican ~ "Van Hollen", TRUE ~   "Chaffee"))
van_hollen <- sen_results %>%
group_by(Results) %>%
count(Results)
van_hollen
md_income <- get_acs(geography = "county",
variables = c(median_income = "B19013_001"),
state = "MD",
year = 2020) %>%
arrange(desc(estimate))
sen_results %>%
mutate(as.numeric(pct_van_hollen = (chris_van_hollen_democratic)/(chris_van_hollen_democratic + chris_chaffee_republican + scottie_griffin_write_in_democratic + andrew_j_wildman_write_in_unaffiliated + other_write_ins)))
md_income <- get_acs(geography = "county",
variables = c(median_income = "B19013_001"),
state = "MD",
year = 2020) %>%
arrange(desc(estimate))
sen_results %>%
mutate(as.numeric(pct = (chris_van_hollen_democratic)/(chris_van_hollen_democratic + chris_chaffee_republican + scottie_griffin_write_in_democratic + andrew_j_wildman_write_in_unaffiliated + other_write_ins)))
md_income <- get_acs(geography = "county",
variables = c(median_income = "B19013_001"),
state = "MD",
year = 2020) %>%
arrange(desc(estimate))
sen_results %>%
mutate(pct_van_hollen = (chris_van_hollen_democratic)/(chris_van_hollen_democratic + chris_chaffee_republican + scottie_griffin_write_in_democratic + andrew_j_wildman_write_in_unaffiliated + other_write_ins))
md_income <- get_acs(geography = "county",
variables = c(median_income = "B19013_001"),
state = "MD",
year = 2020) %>%
arrange(desc(estimate))
sen_results %>%
mutate(pct_van_hollen = (chris_van_hollen_democratic)/(chris_van_hollen_democratic + chris_chaffee_republican + scottie_griffin_write_in_democratic + andrew_j_wildman_write_in_unaffiliated + other_write_ins))
sen_results
View(sen_results)
senate_url <- "https://elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"
sen_results <- senate_url %>%
read_html() %>%
html_table()
sen_results <- sen_results[[1]] %>%
clean_names() %>%
slice(-25) %>%
mutate(across(c(2:6), parse_number)) %>%
mutate(Results = case_when(
chris_van_hollen_democratic > chris_chaffee_republican ~ "Van Hollen", TRUE ~   "Chaffee"))
van_hollen <- sen_results %>%
group_by(Results) %>%
count(Results)
van_hollen
md_income <- get_acs(geography = "county",
variables = c(median_income = "B19013_001"),
state = "MD",
year = 2020) %>%
arrange(desc(estimate))
van_hollen_sen_results <- sen_results %>%
mutate(pct_van_hollen = (chris_van_hollen_democratic)/(chris_van_hollen_democratic + chris_chaffee_republican + scottie_griffin_write_in_democratic + andrew_j_wildman_write_in_unaffiliated + other_write_ins))
sen_results
View(van_hollen_sen_results)
md_income <- get_acs(geography = "county",
variables = c(median_income = "B19013_001"),
state = "MD",
year = 2020) %>%
arrange(desc(estimate))
van_hollen_sen_results <- sen_results %>%
mutate(pct_van_hollen = (chris_van_hollen_democratic)/(chris_van_hollen_democratic + chris_chaffee_republican + scottie_griffin_write_in_democratic + andrew_j_wildman_write_in_unaffiliated + other_write_ins)*100)
van_hollen_sen_results %>%
select(jurisdiction, pct_van_hollen)
