install.packages(tidycensus)
library(tidyverse)
library(tidycensus)
install.packages("tidycensus")
library(tidyverse)
library(tidycensus)
library(janitor)
census_api_key("7a4a9ebdbde67a87e06f867ed0fde499e1bc46fb", install=TRUE)
install.packages("tidycensus")
library(tidyverse)
library(tidycensus)
library(janitor)
census_api_key("7a4a9ebdbde67a87e06f867ed0fde499e1bc46fb", install=TRUE)
pl_2020 <- load_variables(2020, "pl", cache = TRUE)
pl_2020
total_pop_2020 <- get_decennial(geography="state", variables="P1_001N", year=2020)
total_pop_2020
total_pop_2020 <- get_decennial(geography="state", variables="P1_001N", year=2020) %>%
arrange(desc(value))
total_pop_2020
total_pop_2020 <- get_decennial(geography="state", variables="P1_001N", year=2020) %>%
clean_names() %>%
arrange(desc(value)) %>%
rename(total_population = value,
state = name) %>%
select(state, total_population)
total_pop_2020
pct_white_2020 <- get_decennial(geography="us", variables=c("P1_001N","P1_003N"), year=2020)
pct_white_2020
pct_white_2020 <- get_decennial(geography="us", variables=c("P1_001N","P1_003N"), year=2020, output="wide")
pct_white_2020
pct_white_2020 <- get_decennial(geography="us", variables=c("P1_001N","P1_003N"), year=2020, output="wide") %>%
rename(geography = NAME,
total_pop = P1_001N,
white_pop = P1_003N) %>%
select(-GEOID)
pct_white_2020
pct_white_2020 <- get_decennial(geography="us", variables=c("P1_001N","P1_003N"), year=2020, output="wide") %>%
rename(geography = NAME,
total_pop = P1_001N,
white_pop = P1_003N) %>%
select(-GEOID) %>%
mutate(pct_white = white_pop/total_pop*100)
pct_white_2020
md <- get_acs(geography = "county",
variables = c(median_income = "B19013_001"),
state = "MD",
year = 2020) %>%
arrange(desc(estimate))
md
md %>%
mutate(NAME = gsub(" County, Maryland", "", NAME)) %>%
ggplot(aes(x = estimate, y = reorder(NAME, estimate))) +
geom_errorbarh(aes(xmin = estimate - moe, xmax = estimate + moe)) +
geom_point(color = "red") +
labs(title = "Household income by county in Maryland",
subtitle = "2015-2019 American Community Survey",
y = "",
x = "ACS estimate (bars represent margin of error)")
acs_variable <- load_variables(dataset = "acs5", year=2020)
View(pl_2020)
View(md)
View(acs_variable)
male_pop <- get_acs(geography = "state",
variables = c(total_male = "B98012_002")) %>%
arrange(desc(estimate))
male_pop
male_pop <- get_acs(geography = "state",
variables = c(total_male_pop = "B26117_005")) %>%
arrange(desc(estimate))
male_pop
View(pl_2020)
View(total_pop_2020)
male_pop <- get_acs(geography = "state",
variables = c(total_male_pop = "B98012_001")) %>%
arrange(desc(estimate))
male_pop
male_pop <- get_acs(geography = "state",
variables = c(total_male_pop = "B26101_045")) %>%
arrange(desc(estimate))
male_pop
View(male_pop)
total_cal_pop <- get_acs(geography = "state",
variables = c(total_pop = "B26103_002")) %>%
arrange(desc(estimate))
total_cal_pop
male_pop <- get_acs(geography = "state",
variables = c(total_male_pop = "B26101_045")) %>%
arrange(desc(estimate))
total_cal_pop <- get_acs(geography = "state",
variables = c(total_pop = "B26103_002")) %>%
arrange(desc(estimate))
cal_male_pct <- (male_pop/total_cal_pop)*100
male_pop <- get_acs(geography = "state",
variables = c(total_male_pop = "B26101_045")) %>%
arrange(desc(estimate))
total_cal_pop <- get_acs(geography = "state",
variables = c(total_pop = "B26103_002")) %>%
arrange(desc(estimate))
cal_male_pct <- (male_pop/total_cal_pop)
male_pop <- get_acs(geography = "state",
variables = c(total_male_pop = "B26101_045")) %>%
arrange(desc(estimate))
total_cal_pop <- get_acs(geography = "state",
variables = c(total_pop = "B26103_002")) %>%
arrange(desc(estimate))
cal_male_pct <- (male_pop$estimate/total_cal_pop$estimate)
male_pop <- get_acs(geography = "state",
variables = c(total_male_pop = "B26101_045")) %>%
arrange(desc(estimate))
total_cal_pop <- get_acs(geography = "state",
variables = c(total_pop = "B26103_002")) %>%
arrange(desc(estimate))
cal_male_pct <- (male_pop$estimate/total_cal_pop$estimate)*100
View(male_pop)
cal_male_pct <- total_cal_pop %>%
inner_join(male_pop, by="geoid")
cal_male_pct <- total_cal_pop %>%
inner_join(male_pop, by="name")
male_pop <- get_acs(geography = "state",
variables = c(total_male_pop = "B98012_002")) %>%
arrange(desc(estimate))
View(male_pop)
male_pop <- get_acs(geography = "state",
variables = c(total_male_pop = "B26101_001","B26101_012", output="wide")) %>%
arrange(desc(estimate))
